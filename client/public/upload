#!/usr/bin/env ruby

require 'net/http'
require 'uri'
require 'digest/md5'
require 'open-uri'

class String
  # colorization
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red; colorize(31); end
  def green; colorize(32); end
  def yellow; colorize(33); end
  def blue; colorize(34); end
  def pink; colorize(35); end
  def light_blue; colorize(36); end
end

endpoint = URI.parse('http://localhost:8081/chrome')

puts "Uploading #{'Google Chrome'.green}'s history data..."

# TODO: extend this search to account for Firefox and Safari's history storage
folder = File.expand_path("~/Library/Application\ Support/Google/Chrome")
query = "#{folder}/*/History"

matches = Dir.glob(query)
sorted = matches.sort_by { |f| File.size(f) }.reverse
best_match = sorted.first

data = File.read(best_match)
mime_type = IO.popen(["file", "--brief", "--mime-type", best_match], in: :close, err: :close).read.chomp

remote_ip = open('http://whatismyip.akamai.com').read

http = Net::HTTP.new(endpoint.host, endpoint.port)
req = Net::HTTP::Post.new(endpoint.path)
session_id = Digest::MD5.hexdigest(remote_ip)

res, body = http.post(endpoint.path, data, {
	'Content-Type' => mime_type,
	'X-Session-ID' => session_id
})

puts "Success!".yellow if res.is_a?(Net::HTTPSuccess)
